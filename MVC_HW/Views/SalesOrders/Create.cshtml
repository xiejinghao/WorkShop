@model MVC_HW.Models.Order
@{ ViewBag.Title = "建立訂單"; }
@using (Html.BeginForm("CreateOrder", "Order", FormMethod.Post, new { id = "form" }))
{
    <table style="margin-top:20px">
        <tr></tr>
        <tr>
            <td>@Html.LabelFor(m => m.CustomerID, new { @class = "required" } )</td>
            <td colspan="3">
                @Html.DropDownListFor(m => m.CustomerID, new SelectList(ViewBag.CL, "CustomerID", "CompanyName"), "請選擇", new { @class = "form-control kendodropdown", style = "width:200px" })
                @Html.ValidationMessageFor(m => m.CustomerID)
            </td>
        </tr>
        <tr>
            <td>@Html.LabelFor(m => m.EmployeeID, new { @class = "required" })</td>
            <td colspan="3">
                @Html.DropDownListFor(m => m.EmployeeID, new SelectList(ViewBag.EL, "EmployeeID", "FullName"), "請選擇", new { @class = "form-control kendodropdown", style = "width:200px" })
                @Html.ValidationMessageFor(m => m.EmployeeID)
            </td>
        </tr>
        <tr>
            <td>@Html.LabelFor(m => m.OrderDate, new { @class = "required" })</td>
            <td>
                @Html.TextBoxFor(m => m.OrderDate, new { type = "date", @class = "form-control kendodatepicker", style = "width:150px" })
                @Html.ValidationMessageFor(m => m.OrderDate)
            </td>
            <td>@Html.LabelFor(m => m.RequireDate, new { @class = "required" })</td>
            <td>
                @Html.TextBoxFor(m => m.RequireDate, new { type = "date", @class = "form-control kendodatepicker", style = "width:150px" })
                @Html.ValidationMessageFor(m => m.RequireDate)
            </td>
        </tr>
        <tr>
            <td>@Html.LabelFor(m => m.ShippedDate)</td>
            <td colspan="3">
                @Html.TextBoxFor(m => m.ShippedDate, new { type = "date", @class = "form-control kendodatepicker", style = "width:150px" })
            </td>
        </tr>
        <tr>
            <td>@Html.LabelFor(m => m.ShipperID)</td>
            <td colspan="3">
                @Html.DropDownListFor(m => m.ShipperID, new SelectList(ViewBag.SL, "ShipperID", "CompanyName"), "請選擇", new { @class = "form-control kendodropdown", style = "width:200px" })
                @Html.ValidationMessageFor(m => m.ShipperID)
            </td>
        </tr>
        <tr>
            <td>@Html.LabelFor(m => m.Freight)</td>
            <td colspan="3">
                @Html.TextBoxFor(m => m.Freight, new { type = "number", @class = "input-number form-control k-textbox", style = "width:150px" })
                @Html.ValidationMessageFor(m => m.Freight)
            </td>
        </tr>
        <tr>
            <td>@Html.LabelFor(m => m.ShipCountry)</td>
            <td>
                @Html.TextBoxFor(m => m.ShipCountry, new { @class = "form-control k-textbox" })
                @Html.ValidationMessageFor(m => m.ShipCountry)
            </td>
            <td>@Html.LabelFor(m => m.ShipCity)</td>
            <td>
                @Html.TextBoxFor(m => m.ShipCity, new { @class = "form-control k-textbox" })
                @Html.ValidationMessageFor(m => m.ShipCity)
            </td>
        </tr>
        <tr>
            <td>@Html.LabelFor(m => m.ShipRegion)</td>
            <td>
                @Html.TextBoxFor(m => m.ShipRegion, new { @class = "form-control k-textbox" })
                @Html.ValidationMessageFor(m => m.ShipRegion)
            </td>
            <td>@Html.LabelFor(m => m.ShipPostalCode)</td>
            <td>
                @Html.TextBoxFor(m => m.ShipPostalCode, new { @class = "form-control k-textbox" })
                @Html.ValidationMessageFor(m => m.ShipPostalCode)
            </td>
        </tr>
        <tr>
            <td>@Html.LabelFor(m => m.ShipAddress)</td>
            <td colspan="3">
                @Html.TextBoxFor(m => m.ShipAddress, new { @class = "form-control k-textbox" })
                @Html.ValidationMessageFor(m => m.ShipAddress)
            </td>
        </tr>
        <tr>
            <td></td>
            <td colspan="3">
                <input value="存檔" class="btn btn-primary" id="save" />
                <button type="button" class="btn btn-warning" onclick="location.href='@Url.Action("Query", "SalesOrders")';">回前一頁</button>
            </td>
        </tr>
    </table>
    <div id="kendogrid"></div>
    <script type="text/x-kendo-template" id="template">
        <div class="refreshBtnContainer">
            <a class="k-pager-refresh k-link k-button" title="Refresh"><span class="k-icon k-i-reload"></span></a>
        </div>
        <div class="toolbar">
            <button id="add">add</button>
        </div>
    </script>
    /*<button type="button" id>新增商品</button>
     <table id="detailTable" style="border: 1px solid black; width: 80%" class="DetailTable">
         <tr>
             <th>商品</th>
             <th>單價</th>
             <th>數量</th>
             <th>小計</th>
             <th>動作</th>
         </tr>
     </table>*/





}
<script>
    $(document).ready(function () {
        $('.kendodatepicker').kendoDatePicker({ format: "yyyy/MM/dd" });
        $('.kendodropdown').kendoDropDownList();




           var productname = [];
          $.ajax({
                url: '@Url.Action("GetProductList", "SalesOrders")',
                type: 'Post',

              success: function (response) {
                  productname = response;
                  console.log(productname);
              }


            })






        var dataSource = new kendo.data.DataSource({
            pageSize: 20,
           autoSync:true,
            autoSync: true,
            schema: {
                model: {
                    id: "ProductID",
                    fields: {

                        ProductID: { editable:true   }, //{ validation: { required: true } },
                        UnitPrice: { type: "number" },
                        Count: { editable: false }


                    }, total: function () {

                        return this.get("UnitPrice") * this.get("Qty");
                    }, transportname: function () {
                        var name;
                        var productid =this.get("ProductID");
                        productname.forEach(function (v, i) {
                            if (productid == v.ProductID) {
                                name = v.ProductName;


                            }



                        })
                        return name;


                    }

                }
            }
        });

        var grid = $("#kendogrid").kendoGrid({
        height: 550,

        dataSource: dataSource,
        pageable:
    {
        pageSizes: true
            },
        editable: true,
        sortable: true,

        toolbar: ["create"],
        pageable: true,


        columns: [{

            field: "ProductID",
            title: "產品名稱",
            width: 240
            , editor: categoryDropDownEditor,template:"#=transportname()#"


        },
        {
            field: "Qty",
            title: "數量",

        },
        {
            field: "UnitPrice",
            title: "單價",

        },
        {
            field: "",
            title: "小計",
            template: "#=total()#"
            }, {
             command:"destroy"
               
            }

            ], save: function (e) {

                if (e.values.name !== "") {
                    // the user changed the name field
                    if (e.values.name !== e.model.name) {
                        console.log("name is modified");
                    }
                } else {
                    e.preventDefault();
                    console.log("name cannot be empty");
                }
            }
    })




        function categoryDropDownEditor(container, options) {
            $('<input required data-bind="value:' + options.field + '"/>')
                .appendTo(container)
                .kendoDropDownList({

                    dataTextField: "ProductName",
                    dataValueField: "ProductID",
                    dataSource: {
                        type: "json",
                        transport: {
                            read: '@Url.Action("GetProductList","SalesOrders")'
                        }
                    }, change: function (e) {

                        var dataItem = e.sender.dataItem()
                        console.log("dataitem", dataItem);
                        options.model.set("UnitPrice", dataItem.UnitPrice)


                    }

                });
        }








    })
    $("#save").click(function (e) {
        var submit = $("#kendogrid").data("kendoGrid").dataSource.data();
        var form = $("#form").serializeArray();
        var json = {};
        form.forEach(function (v, i) {
            json[v.name] = v.value;
        })
        console.log(submit);
       
        var orderdetaillist=[]
        for (var i = 0; i < submit.length; i++) {
                
            var detail = { };
            detail['ProductID'] = submit[i].ProductID;
            detail['Qty'] = submit[i].Qty;   
            detail['UnitPrice'] = submit[i].UnitPrice;   
            orderdetaillist.push(detail); 
        }

       
        json['OrderDetail'] = orderdetaillist;
        console.log(json)
          $.ajax({
            url: '@Url.Action("InsertOrderDetail", "SalesOrders")',
            dataType: "json",

            type: 'Post',
            data: json,


              success: function (response) {
                  alert("新增成功");
                  window.location.href='@Url.Action("Query", "SalesOrders")'
              }


            })




    })

</script>